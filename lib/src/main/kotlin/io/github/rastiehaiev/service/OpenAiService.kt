package io.github.rastiehaiev.service

import io.github.rastiehaiev.client.OpenAiClient
import org.slf4j.LoggerFactory

private const val LABEL_CORRECTED = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç"
private const val LABEL_EXPLANATION = "‚ÑπÔ∏è –ü–æ—è—Å–Ω–µ–Ω–Ω—è"
private const val LABEL_ALTERNATIVE = "üîÅ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç"
private const val LABEL_NEW_WORDS = "‚úçÔ∏è –ù–æ–≤—ñ —Å–ª–æ–≤–∞/—Ñ—Ä–∞–∑–∏"
private const val LABEL_TRANSLATION_UA = "üá∫üá¶ –ü–µ—Ä–µ–∫–ª–∞–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é"

class OpenAiService(private val client: OpenAiClient) {
    private val logger = LoggerFactory.getLogger(javaClass)

    fun fixUserInputInGroup(userInput: String) =
        ask(systemAdvice = GROUP_CHAT_PROMPT, userInput).getOrNull()

    fun fixUserInputInPersonalChat(userInput: String) =
        ask(systemAdvice = PERSONAL_CHAT_PROMPT, userInput)
            .map { it?.toUserInputAnalysed() }
            .getOrNull()

    private fun ask(systemAdvice: String, userInput: String) =
        client.ask(systemAdvice, userInput)
            .onFailure { logger.error("Error while asking user input $userInput", it) }

    private fun String.toUserInputAnalysed(): UserInputAnalysed? {
        fun extractBlock(label: String): String? {
            val regex = Regex("(?s)$label:\\n+(.*?)(?=\\n+[Ô∏è‚ÑπÔ∏è‚úÖüîÅ‚úçÔ∏è]|$)")
            return regex.find(this)?.groupValues?.get(1)
                ?.trim()
                ?.takeIf { it.isNotBlank() }
                ?.takeIf { it.length >= 5 }
        }

        val wordsString = extractBlock(LABEL_NEW_WORDS)
        val corrected = extractBlock(LABEL_CORRECTED) ?: return null
        val explanation = extractBlock(LABEL_EXPLANATION) ?: return null
        val words = wordsString?.parseWords()
        return UserInputAnalysed(
            corrected = corrected,
            explanation = explanation,
            alternative = extractBlock(LABEL_ALTERNATIVE),
            words = words,
        )
    }

    private fun String.parseWords(): Map<String, String>? {
        val words = trim()
            .split("\n")
            .mapNotNull { line: String ->
                line.split("-")
                    .takeIf { it.size == 2 }
                    ?.let { keyAndValue ->
                        val key = keyAndValue[0].trim()
                        val value = keyAndValue[1].trim()
                        if (key.isNotBlank() && value.isNotBlank()) {
                            key to value
                        } else {
                            null
                        }
                    }
            }
            .associate { it }
            .takeIf { it.isNotEmpty() }
        return words
    }
}

data class UserInputAnalysed(
    val corrected: String,
    val explanation: String,
    val alternative: String?,
    val words: Map<String, String>?,
)

private const val GROUP_CHAT_PROMPT = """
–¢–∏ –º–æ–≤–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç —É Telegram-–≥—Ä—É–ø—ñ, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î –ª—é–¥—è–º –≤–∏–≤—á–∞—Ç–∏ —ñ—Ç–∞–ª—ñ–π—Å—å–∫—É –º–æ–≤—É. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —á–∞—Å—Ç–æ –ø–∏—à—É—Ç—å —Ä–µ—á–µ–Ω–Ω—è —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é –∞–±–æ –º—ñ–∫—Å–æ–º —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—ó –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.

–ö–æ–ª–∏ —Ö—Ç–æ—Å—å –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —Ç–∏ –ø–æ–≤–∏–Ω–µ–Ω:

1. **–í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏** –≤ —Ä–µ—á–µ–Ω–Ω—ñ (–≥—Ä–∞–º–∞—Ç–∏–∫–∞, –ª–µ–∫—Å–∏–∫–∞, —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è). –ù–µ –≤–∏–ø—Ä–∞–≤–ª—è–π –≤–∏–ø–∞–¥–∫–æ–≤—ñ –¥—Ä—É–∫–∞—Ä—Å—å–∫—ñ –ø–æ–º–∏–ª–∫–∏ —á–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –Ω–∞–≥–æ–ª–æ—Å—ñ–≤.
2. **–ü–æ—è—Å–Ω–∏—Ç–∏**, —á–æ–º—É –±—É–ª–∏ –∑—Ä–æ–±–ª–µ–Ω—ñ —Ü—ñ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è (–∫–æ—Ä–æ—Ç–∫–æ —ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ).
3. **–ü–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –º–æ–≤—É.**
4. **(–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)**: —è–∫—â–æ —ñ—Å–Ω—É—î –ø—Ä–∏—Ä–æ–¥–Ω–∞ **–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞**, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π —ó—ó –∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º (–∞–ª–µ –Ω–µ –≤–∏–≥–∞–¥—É–π —à—Ç—É—á–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤).

üîπ –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—ó ‚Äî –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π.
üîπ –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∞–≤–∏–ª—å–Ω–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π: "-".
üîπ –Ø–∫—â–æ –≤ —Ä–µ—á–µ–Ω–Ω—ñ —Ç—Ä–∞–ø–ª—è—é—Ç—å—Å—è —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Å–ª–æ–≤–∞ ‚Äî –ø–µ—Ä–µ–∫–ª–∞–¥–∏ —ó—Ö –Ω–∞ —ñ—Ç–∞–ª—ñ–π—Å—å–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ —Ä–µ—á–µ–Ω–Ω—è. –ù–µ –∑–∞–ª–∏—à–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Å–ª–æ–≤–∞ —É –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—ñ–π —ñ—Ç–∞–ª—ñ–π—Å—å–∫—ñ–π –≤–µ—Ä—Å—ñ—ó.
üîπ –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Å—Ç–∏—Å–ª–æ, –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–æ —ñ —Ç–æ—á–Ω–æ.

–ü–æ–≤–µ—Ä—Ç–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:

$LABEL_CORRECTED:  
[–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–µ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–µ —Ä–µ—á–µ–Ω–Ω—è]

$LABEL_EXPLANATION:  
[—á–æ–º—É —Ç–∞–∫, —è–∫—ñ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Ä—É—à–µ–Ω–æ]

$LABEL_TRANSLATION_UA:  
[–ø–µ—Ä–µ–∫–ª–∞–¥]

$LABEL_ALTERNATIVE:  
[–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞] ‚Äî [–ø–æ—è—Å–Ω–µ–Ω–Ω—è]
"""

private const val PERSONAL_CHAT_PROMPT = """
–¢–∏ —á–∞—Ç-–±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –≤–∏–≤—á–∞—Ç–∏ —ñ—Ç–∞–ª—ñ–π—Å—å–∫—É –º–æ–≤—É. –°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –æ–¥–∏–Ω –Ω–∞ –æ–¥–∏–Ω.

–ù–∞ –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∏ –º—É—Å–∏—à:

1. –ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ä–µ—á–µ–Ω–Ω—è –Ω–∞ –≥—Ä–∞–º–∞—Ç–∏—á–Ω—ñ –ø–æ–º–∏–ª–∫–∏, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –≤–∂–∏–≤–∞–Ω–Ω—è —Å–ª—ñ–≤ –∞–±–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.
2. –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∞–≤–∏–ª—å–Ω–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π: "-".
3. –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∏, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É —Ç–∞–∫—ñ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ:

$LABEL_CORRECTED:
<–Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ä—è–¥–æ–∫ ‚Äì –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ñ–æ—Ä–º—É–ª—å–æ–≤–∞–Ω–µ —Ä–µ—á–µ–Ω–Ω—è>

$LABEL_EXPLANATION:
<–∫–æ—Ä–æ—Ç–∫–µ –ø–æ—è—Å–Ω–µ–Ω–Ω—è, —á–æ–º—É –±—É–ª–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —ñ —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ>

$LABEL_ALTERNATIVE:
<–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –ø—Ä–∏—Ä–æ–¥–Ω–∏–π –∞–±–æ —Ä–æ–∑–º–æ–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç, —è–∫—â–æ —Ç–∞–∫–∏–π —î>

$LABEL_NEW_WORDS:
–ü–µ—Ä–µ–ª—ñ—á—É–π –ª–∏—à–µ —Ç—ñ —Å–ª–æ–≤–∞ –∞–±–æ —Ñ—Ä–∞–∑–∏, —è–∫—ñ:
‚Äì –±—É–ª–∏ –≤–∂–∏—Ç—ñ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ,
‚Äì –∞–±–æ –±—É–ª–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.

–î–ª—è –∫–æ–∂–Ω–æ—ó –∑ –Ω–∏—Ö:
‚Äì –Ø–∫—â–æ —Ü–µ –æ–∫—Ä–µ–º–µ —Å–ª–æ–≤–æ (—ñ–º–µ–Ω–Ω–∏–∫, –¥—ñ—î—Å–ª–æ–≤–æ, –ø—Ä–∏–∫–º–µ—Ç–Ω–∏–∫) ‚Äî –ø–µ—Ä–µ–∫–ª–∞–¥–∏ –π–æ–≥–æ –≤ –±–∞–∑–æ–≤—ñ–π —Ñ–æ—Ä–º—ñ: —ñ–Ω—Ñ—ñ–Ω—ñ—Ç–∏–≤ / –Ω–∞–∑–∏–≤–Ω–∏–π / —á–æ–ª–æ–≤—ñ—á–∏–π —Ä—ñ–¥. –î–ª—è —ñ–º–µ–Ω–Ω–∏–∫—ñ–≤ –≤–∫–∞–∂–∏ —Ç–∞–∫–æ–∂ –∞—Ä—Ç–∏–∫–ª—å (un –∞–±–æ una).
- –£–∫—Ä–∞—ó–Ω—å–∫–µ —Å–ª–æ–≤–æ —Ç–∞–∫–æ–∂ –ø–æ—Å—Ç–∞–≤ —É –±–∞–∑–æ–≤—ñ–π —Ñ–æ—Ä–º—ñ: —ñ–Ω—Ñ—ñ–Ω—ñ—Ç–∏–≤ / –Ω–∞–∑–∏–≤–Ω–∏–π / —á–æ–ª–æ–≤—ñ—á–∏–π —Ä—ñ–¥.
‚Äì –Ø–∫—â–æ —Ü–µ –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó, —Å—Ç–∞–ª–æ–º—É –≤–∏—Ä–∞–∑—ñ –∞–±–æ –ø–æ–≤ º—è–∑–∞–Ω–∏—Ö —Å–ª–æ–≤–∞—Ö ‚Äî –Ω–∞–¥–∞–π **–ø–æ–≤–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ñ—Ä–∞–∑—É —Ç–∞–∫, —è–∫ –≤–æ–Ω–∞ –º–∞—î –≤–∏–≥–ª—è–¥–∞—Ç–∏ –≤ —Ä–µ—á–µ–Ω–Ω—ñ**. –ù–µ –æ–±—Ä—ñ–∑–∞–π –¥—ñ—î—Å–ª–æ–≤–∞, —á–∞—Å—Ç–∫–∏ –∞–±–æ –∞—Ä—Ç–∏–∫–ª—ñ.

–§–æ—Ä–º–∞—Ç:
<—ñ—Ç–∞–ª—ñ–π—Å—å–∫–µ —Å–ª–æ–≤–æ –∞–±–æ –ø–æ–≤–Ω–∞ —Ñ—Ä–∞–∑–∞> - <—É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥>

–ü—Ä–∞–≤–∏–ª–∞:
‚Äì –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥—Å–∏–ª–∞—î —Ä–µ—á–µ–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é, –∞ –ø–æ—Ç—ñ–º –ø–µ—Ä–µ–∫–ª–∞–¥ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é ‚Äî –ø–æ—Ä—ñ–≤–Ω—è–π –ø–µ—Ä–µ–∫–ª–∞–¥ –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª–æ–º, –∑–Ω–∞–π–¥–∏ –ø–æ–º–∏–ª–∫–∏, –≤–∏–ø—Ä–∞–≤–∏, –ø–æ—è—Å–Ω–∏.
‚Äì –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî —Ü–µ –º—ñ–∫—Å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ç–∞ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—ó, –ø–µ—Ä–µ–∫–ª–∞–¥–∏ –≤—Å–µ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é —Ç–∞ –≤–∏–ø—Ä–∞–≤–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
‚Äì –Ø–∫—â–æ –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ **–Ω–µ–º–∞—î —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏** ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ø—Ä–æ—Å—Ç–æ: "-".
‚Äì –ù–µ –≤–∏–ø—Ä–∞–≤–ª—è–π –¥—Ä—É–∫–∞—Ä—Å—å–∫—ñ –ø–æ–º–∏–ª–∫–∏, –ª—ñ—Ç–µ—Ä–∏ –±–µ–∑ –Ω–∞–≥–æ–ª–æ—Å—É –∞–±–æ –Ω–µ–∑–Ω–∞—á–Ω—ñ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø–æ—Ö–∏–±–∫–∏.
- –ù–æ–≤—ñ —Å–ª–æ–≤–∞: –∑–ª—ñ–≤–∞ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–µ —Å–ª–æ–≤–æ, —Å–ø—Ä–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ!

–¢–≤–æ—è –º–µ—Ç–∞ ‚Äî –±—É—Ç–∏ –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤–∏–º, –∫–æ—Ä–µ–∫—Ç–Ω–∏–º —ñ —á—ñ—Ç–∫–∏–º –ø–æ–º—ñ—á–Ω–∏–∫–æ–º —ñ–∑ –≥—Ä–∞–º–∞—Ç–∏–∫–∏. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Å—Ç–∏—Å–ª–æ –π –ø–æ —Å—É—Ç—ñ.
"""
